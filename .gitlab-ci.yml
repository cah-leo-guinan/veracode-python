stages:
    - test
    - tag
    - deploy

variables:
  GIT_STRATEGY: clone

.veracode_credentials: &veracode_credentials
    script:
        - mkdir ~/.veracode
        - echo "[DEFAULT]" > ~/.veracode/credentials
        - echo "VERACODE_API_ID = ${VERACODE_API_ID}" >>
            ~/.veracode/credentials
        - echo "VERACODE_API_SECRET = ${VERACODE_API_SECRET}" >>
            ~/.veracode/credentials

# run_unit_test:
#     stage: test
#
#     tags:
#         - python
#
#     script: # Set up API credentials and run tests
#         - mkdir ~/.veracode
#         - echo "[DEFAULT]" > ~/.veracode/credentials
#         - echo "VERACODE_API_ID = ${VERACODE_API_ID}" >>
#             ~/.veracode/credentials
#         - echo "VERACODE_API_SECRET = ${VERACODE_API_SECRET}" >>
#             ~/.veracode/credentials
#         - pip3 install -r cicd/requirements.txt
#         - python3 tests.py

gitlab_tag:
    stage: tag

    tags:
        - python

    <<: *veracode_credentials
    script: # Update package version and create a tag
        - apt-get update
        - apt-get install git -y
        - pip3 install semantic_version gitpython
        # ouroboros
        - pip3 install veracode-python
        
        # Set up ssh key
        # Configure repo
        - git config --global user.email "${GITLAB_USER_EMAIL}"
        - git config --global user.name "${GITLAB_USER_LOGIN}"
        - git remote set-url origin ${CI_PUSH_URL}
        - git checkout master

        # Create badges. 37 pieces of flare.
        - python3 cicd/make_badge.py ${CI_PROJECT_NAME}

        # Push updates to gitlab
        - export VERSION=$(python3 cicd/increment_version.py)
        - git commit -am "Version ${VERSION} [skip ci]"
        - git push --set-upstream origin master
        - git tag -a v${VERSION} -m "Version ${VERSION}"
        - git push origin v${VERSION}


    only: # only tag on merge into master
        - master

github_release: # Create a release on github
    stage: deploy

    tags:
        - python

    script:
        - apt-get update
        - apt-get install curl git -y
        - pip3 install -r cicd/requirements.txt

        # Set up github ssh key
        - mkdir -p ~/.ssh
        - echo "${GITHUB_SSH_PRIVATE_KEY}" > ~/.ssh/id_rsa
        - ssh-keyscan -H github.com > ~/.ssh/known_hosts
        - eval $(ssh-agent -s)
        - chmod -R 400 ~/.ssh
        - ssh-add ~/.ssh/id_rsa

        # Push updates to github
        - git checkout master
        - git config --global user.email "chuckorde@gmail.com"
        - git config --global user.name "chuckorde@gmail.com"
        - git remote set-url origin
          git@github.com:chuckorde/veracode-python.git
        - git rm -r --cache *

        - export VERSION=$(
            python3 -c'import veracode;
            print(veracode.__version__)')
        - git add LICENSE.txt README.md setup.* veracode cicd
        - git commit -m "Version ${VERSION}"
        - git push --set-upstream origin master --force

        # Create release
        # - sed -e "s/VERSION/$VERSION/g" cicd/github_api.json > data
        # - curl --data @data
        #   https://api.github.com/repos/chuckorde/veracode-python/releases?access_token=${GITHUB_API_TOKEN}

    only: # only deploy on merge into master
        - master

# pypi_publish: # publish on PyPi
#     stage: deploy
#
#     tags:
#         - python
#
#     script:
#          - rm -rf dist
#          - pip3 install twine
#          - python3 setup.py sdist
#          - twine upload dist/*
#
#     only:
#         - master # only on merge into master
